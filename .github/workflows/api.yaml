name: Image Build

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - id: nodeversion
        run: echo ::set-output name=NODE::$(cat .nvmrc)
      - name: restore Cache
        uses: actions/cache@master
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Use Node.js ${{steps.nodeversion.outputs.NODE}}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.nodeversion.outputs.NODE }}
      - name: Install project
        run: |
          yarn
          npx lerna bootstrap
      - name: Lint packages
        run: npx lerna run lint
      - name: Builds packages
        run: |
          echo VUE_APP_REVISION=$GITHUB_SHA >> packages/ui/.env.production
          npx lerna run package
      - name: docker build
        run: docker build .
      - name: Push to registry
        if: github.ref == 'refs/heads/master'
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          dockerfile: Dockerfile
          name: zekth/too-much-artisans/api
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          tags: "latest"
      - name: Push to server
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SRV_HOST }}
          username: ${{ secrets.SRV_USERNAME }}
          password: ${{ secrets.SRV_PASSWORD }}
          port: ${{ secrets.SRV_PORT }}
          script: |
            cd artisans
            docker-compose down
            docker-compose pull
            docker-compose up -d
            docker rmi -f $(docker images -f "dangling=true" -q) || true
